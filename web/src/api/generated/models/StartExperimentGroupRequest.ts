/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * Dashboard service for coordinating distributed CPU simulation experiments
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StartExperimentGroupRequest
 */
export interface StartExperimentGroupRequest {
    /**
     * Unique experiment group identifier
     * @type {string}
     * @memberof StartExperimentGroupRequest
     */
    groupId: string;
    /**
     * Optional description of the experiment group
     * @type {string}
     * @memberof StartExperimentGroupRequest
     */
    description?: string;
    /**
     * Number of times to repeat the experiment
     * @type {number}
     * @memberof StartExperimentGroupRequest
     */
    repeatCount: number;
    /**
     * Timeout for each experiment in seconds
     * @type {number}
     * @memberof StartExperimentGroupRequest
     */
    timeout: number;
    /**
     * Requests per second for each experiment
     * @type {number}
     * @memberof StartExperimentGroupRequest
     */
    qps: number;
    /**
     * Delay between experiments in seconds
     * @type {number}
     * @memberof StartExperimentGroupRequest
     */
    delayBetween?: number;
}

/**
 * Check if a given object implements the StartExperimentGroupRequest interface.
 */
export function instanceOfStartExperimentGroupRequest(value: object): value is StartExperimentGroupRequest {
    if (!('groupId' in value) || value['groupId'] === undefined) return false;
    if (!('repeatCount' in value) || value['repeatCount'] === undefined) return false;
    if (!('timeout' in value) || value['timeout'] === undefined) return false;
    if (!('qps' in value) || value['qps'] === undefined) return false;
    return true;
}

export function StartExperimentGroupRequestFromJSON(json: any): StartExperimentGroupRequest {
    return StartExperimentGroupRequestFromJSONTyped(json, false);
}

export function StartExperimentGroupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StartExperimentGroupRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'groupId': json['groupId'],
        'description': json['description'] == null ? undefined : json['description'],
        'repeatCount': json['repeatCount'],
        'timeout': json['timeout'],
        'qps': json['qps'],
        'delayBetween': json['delayBetween'] == null ? undefined : json['delayBetween'],
    };
}

export function StartExperimentGroupRequestToJSON(json: any): StartExperimentGroupRequest {
    return StartExperimentGroupRequestToJSONTyped(json, false);
}

export function StartExperimentGroupRequestToJSONTyped(value?: StartExperimentGroupRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'groupId': value['groupId'],
        'description': value['description'],
        'repeatCount': value['repeatCount'],
        'timeout': value['timeout'],
        'qps': value['qps'],
        'delayBetween': value['delayBetween'],
    };
}

