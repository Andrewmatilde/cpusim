/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * 管理面API，用于管理多个CPU仿真主机和全局实验
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RequestConfig
 */
export interface RequestConfig {
    /**
     * 目标主机名（必须是targetHosts中的一个主机名）
     * @type {string}
     * @memberof RequestConfig
     */
    targetHostName: string;
    /**
     * 每秒请求数
     * @type {number}
     * @memberof RequestConfig
     */
    qps: number;
    /**
     * 单个请求超时时间（秒）
     * @type {number}
     * @memberof RequestConfig
     */
    requestTimeout: number;
    /**
     * 目标服务端点
     * @type {string}
     * @memberof RequestConfig
     */
    targetEndpoint?: string;
    /**
     * 请求体（JSON）
     * @type {object}
     * @memberof RequestConfig
     */
    requestBody?: object;
}

/**
 * Check if a given object implements the RequestConfig interface.
 */
export function instanceOfRequestConfig(value: object): value is RequestConfig {
    if (!('targetHostName' in value) || value['targetHostName'] === undefined) return false;
    if (!('qps' in value) || value['qps'] === undefined) return false;
    if (!('requestTimeout' in value) || value['requestTimeout'] === undefined) return false;
    return true;
}

export function RequestConfigFromJSON(json: any): RequestConfig {
    return RequestConfigFromJSONTyped(json, false);
}

export function RequestConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'targetHostName': json['targetHostName'],
        'qps': json['qps'],
        'requestTimeout': json['requestTimeout'],
        'targetEndpoint': json['targetEndpoint'] == null ? undefined : json['targetEndpoint'],
        'requestBody': json['requestBody'] == null ? undefined : json['requestBody'],
    };
}

export function RequestConfigToJSON(json: any): RequestConfig {
    return RequestConfigToJSONTyped(json, false);
}

export function RequestConfigToJSONTyped(value?: RequestConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'targetHostName': value['targetHostName'],
        'qps': value['qps'],
        'requestTimeout': value['requestTimeout'],
        'targetEndpoint': value['targetEndpoint'],
        'requestBody': value['requestBody'],
    };
}

