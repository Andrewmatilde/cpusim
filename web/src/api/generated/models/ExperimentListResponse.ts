/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * Dashboard service for coordinating distributed CPU simulation experiments
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExperimentInfo } from './ExperimentInfo';
import {
    ExperimentInfoFromJSON,
    ExperimentInfoFromJSONTyped,
    ExperimentInfoToJSON,
    ExperimentInfoToJSONTyped,
} from './ExperimentInfo';

/**
 * 
 * @export
 * @interface ExperimentListResponse
 */
export interface ExperimentListResponse {
    /**
     * List of stored experiments
     * @type {Array<ExperimentInfo>}
     * @memberof ExperimentListResponse
     */
    experiments?: Array<ExperimentInfo>;
    /**
     * Total number of experiments
     * @type {number}
     * @memberof ExperimentListResponse
     */
    total?: number;
    /**
     * Current page number
     * @type {number}
     * @memberof ExperimentListResponse
     */
    page?: number;
    /**
     * Number of items per page
     * @type {number}
     * @memberof ExperimentListResponse
     */
    pageSize?: number;
    /**
     * Total number of pages
     * @type {number}
     * @memberof ExperimentListResponse
     */
    totalPages?: number;
    /**
     * 
     * @type {Date}
     * @memberof ExperimentListResponse
     */
    timestamp?: Date;
}

/**
 * Check if a given object implements the ExperimentListResponse interface.
 */
export function instanceOfExperimentListResponse(value: object): value is ExperimentListResponse {
    return true;
}

export function ExperimentListResponseFromJSON(json: any): ExperimentListResponse {
    return ExperimentListResponseFromJSONTyped(json, false);
}

export function ExperimentListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperimentListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'experiments': json['experiments'] == null ? undefined : ((json['experiments'] as Array<any>).map(ExperimentInfoFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
        'page': json['page'] == null ? undefined : json['page'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
    };
}

export function ExperimentListResponseToJSON(json: any): ExperimentListResponse {
    return ExperimentListResponseToJSONTyped(json, false);
}

export function ExperimentListResponseToJSONTyped(value?: ExperimentListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'experiments': value['experiments'] == null ? undefined : ((value['experiments'] as Array<any>).map(ExperimentInfoToJSON)),
        'total': value['total'],
        'page': value['page'],
        'pageSize': value['pageSize'],
        'totalPages': value['totalPages'],
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
    };
}

