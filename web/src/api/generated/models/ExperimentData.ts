/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * Dashboard service for coordinating distributed CPU simulation experiments
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RequesterResult } from './RequesterResult';
import {
    RequesterResultFromJSON,
    RequesterResultFromJSONTyped,
    RequesterResultToJSON,
    RequesterResultToJSONTyped,
} from './RequesterResult';
import type { CollectorResult } from './CollectorResult';
import {
    CollectorResultFromJSON,
    CollectorResultFromJSONTyped,
    CollectorResultToJSON,
    CollectorResultToJSONTyped,
} from './CollectorResult';
import type { ServiceConfig } from './ServiceConfig';
import {
    ServiceConfigFromJSON,
    ServiceConfigFromJSONTyped,
    ServiceConfigToJSON,
    ServiceConfigToJSONTyped,
} from './ServiceConfig';
import type { ExperimentError } from './ExperimentError';
import {
    ExperimentErrorFromJSON,
    ExperimentErrorFromJSONTyped,
    ExperimentErrorToJSON,
    ExperimentErrorToJSONTyped,
} from './ExperimentError';

/**
 * Complete dashboard experiment result
 * @export
 * @interface ExperimentData
 */
export interface ExperimentData {
    /**
     * 
     * @type {ServiceConfig}
     * @memberof ExperimentData
     */
    config?: ServiceConfig;
    /**
     * 
     * @type {Date}
     * @memberof ExperimentData
     */
    startTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExperimentData
     */
    endTime?: Date;
    /**
     * Duration in seconds
     * @type {number}
     * @memberof ExperimentData
     */
    duration?: number;
    /**
     * Experiment status
     * @type {string}
     * @memberof ExperimentData
     */
    status?: string;
    /**
     * Results from collector experiments, keyed by host name
     * @type {{ [key: string]: CollectorResult; }}
     * @memberof ExperimentData
     */
    collectorResults?: { [key: string]: CollectorResult; };
    /**
     * 
     * @type {RequesterResult}
     * @memberof ExperimentData
     */
    requesterResult?: RequesterResult;
    /**
     * 
     * @type {Array<ExperimentError>}
     * @memberof ExperimentData
     */
    errors?: Array<ExperimentError>;
}

/**
 * Check if a given object implements the ExperimentData interface.
 */
export function instanceOfExperimentData(value: object): value is ExperimentData {
    return true;
}

export function ExperimentDataFromJSON(json: any): ExperimentData {
    return ExperimentDataFromJSONTyped(json, false);
}

export function ExperimentDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperimentData {
    if (json == null) {
        return json;
    }
    return {
        
        'config': json['config'] == null ? undefined : ServiceConfigFromJSON(json['config']),
        'startTime': json['startTime'] == null ? undefined : (new Date(json['startTime'])),
        'endTime': json['endTime'] == null ? undefined : (new Date(json['endTime'])),
        'duration': json['duration'] == null ? undefined : json['duration'],
        'status': json['status'] == null ? undefined : json['status'],
        'collectorResults': json['collectorResults'] == null ? undefined : (mapValues(json['collectorResults'], CollectorResultFromJSON)),
        'requesterResult': json['requesterResult'] == null ? undefined : RequesterResultFromJSON(json['requesterResult']),
        'errors': json['errors'] == null ? undefined : ((json['errors'] as Array<any>).map(ExperimentErrorFromJSON)),
    };
}

export function ExperimentDataToJSON(json: any): ExperimentData {
    return ExperimentDataToJSONTyped(json, false);
}

export function ExperimentDataToJSONTyped(value?: ExperimentData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'config': ServiceConfigToJSON(value['config']),
        'startTime': value['startTime'] == null ? undefined : ((value['startTime']).toISOString()),
        'endTime': value['endTime'] == null ? undefined : ((value['endTime']).toISOString()),
        'duration': value['duration'],
        'status': value['status'],
        'collectorResults': value['collectorResults'] == null ? undefined : (mapValues(value['collectorResults'], CollectorResultToJSON)),
        'requesterResult': RequesterResultToJSON(value['requesterResult']),
        'errors': value['errors'] == null ? undefined : ((value['errors'] as Array<any>).map(ExperimentErrorToJSON)),
    };
}

