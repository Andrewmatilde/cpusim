/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * 管理面API，用于管理多个CPU仿真主机和全局实验
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HostHealth
 */
export interface HostHealth {
    /**
     * 
     * @type {string}
     * @memberof HostHealth
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof HostHealth
     */
    externalIP?: string;
    /**
     * 
     * @type {string}
     * @memberof HostHealth
     */
    internalIP?: string;
    /**
     * 
     * @type {string}
     * @memberof HostHealth
     */
    hostType?: HostHealthHostTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof HostHealth
     */
    cpuServiceHealthy?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HostHealth
     */
    collectorServiceHealthy?: boolean;
    /**
     * 仅适用于client类型主机
     * @type {boolean}
     * @memberof HostHealth
     */
    requesterServiceHealthy?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof HostHealth
     */
    timestamp?: Date;
}


/**
 * @export
 */
export const HostHealthHostTypeEnum = {
    Target: 'target',
    Client: 'client'
} as const;
export type HostHealthHostTypeEnum = typeof HostHealthHostTypeEnum[keyof typeof HostHealthHostTypeEnum];


/**
 * Check if a given object implements the HostHealth interface.
 */
export function instanceOfHostHealth(value: object): value is HostHealth {
    return true;
}

export function HostHealthFromJSON(json: any): HostHealth {
    return HostHealthFromJSONTyped(json, false);
}

export function HostHealthFromJSONTyped(json: any, ignoreDiscriminator: boolean): HostHealth {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'externalIP': json['externalIP'] == null ? undefined : json['externalIP'],
        'internalIP': json['internalIP'] == null ? undefined : json['internalIP'],
        'hostType': json['hostType'] == null ? undefined : json['hostType'],
        'cpuServiceHealthy': json['cpuServiceHealthy'] == null ? undefined : json['cpuServiceHealthy'],
        'collectorServiceHealthy': json['collectorServiceHealthy'] == null ? undefined : json['collectorServiceHealthy'],
        'requesterServiceHealthy': json['requesterServiceHealthy'] == null ? undefined : json['requesterServiceHealthy'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
    };
}

export function HostHealthToJSON(json: any): HostHealth {
    return HostHealthToJSONTyped(json, false);
}

export function HostHealthToJSONTyped(value?: HostHealth | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'externalIP': value['externalIP'],
        'internalIP': value['internalIP'],
        'hostType': value['hostType'],
        'cpuServiceHealthy': value['cpuServiceHealthy'],
        'collectorServiceHealthy': value['collectorServiceHealthy'],
        'requesterServiceHealthy': value['requesterServiceHealthy'],
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
    };
}

