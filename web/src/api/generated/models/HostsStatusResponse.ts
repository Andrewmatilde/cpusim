/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * Dashboard service for coordinating distributed CPU simulation experiments
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClientHostStatus } from './ClientHostStatus';
import {
    ClientHostStatusFromJSON,
    ClientHostStatusFromJSONTyped,
    ClientHostStatusToJSON,
    ClientHostStatusToJSONTyped,
} from './ClientHostStatus';
import type { TargetHostStatus } from './TargetHostStatus';
import {
    TargetHostStatusFromJSON,
    TargetHostStatusFromJSONTyped,
    TargetHostStatusToJSON,
    TargetHostStatusToJSONTyped,
} from './TargetHostStatus';

/**
 * 
 * @export
 * @interface HostsStatusResponse
 */
export interface HostsStatusResponse {
    /**
     * Status of target hosts (collectors)
     * @type {Array<TargetHostStatus>}
     * @memberof HostsStatusResponse
     */
    targetHostsStatus?: Array<TargetHostStatus>;
    /**
     * 
     * @type {ClientHostStatus}
     * @memberof HostsStatusResponse
     */
    clientHostStatus?: ClientHostStatus;
    /**
     * 
     * @type {Date}
     * @memberof HostsStatusResponse
     */
    timestamp?: Date;
}

/**
 * Check if a given object implements the HostsStatusResponse interface.
 */
export function instanceOfHostsStatusResponse(value: object): value is HostsStatusResponse {
    return true;
}

export function HostsStatusResponseFromJSON(json: any): HostsStatusResponse {
    return HostsStatusResponseFromJSONTyped(json, false);
}

export function HostsStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HostsStatusResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'targetHostsStatus': json['targetHostsStatus'] == null ? undefined : ((json['targetHostsStatus'] as Array<any>).map(TargetHostStatusFromJSON)),
        'clientHostStatus': json['clientHostStatus'] == null ? undefined : ClientHostStatusFromJSON(json['clientHostStatus']),
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
    };
}

export function HostsStatusResponseToJSON(json: any): HostsStatusResponse {
    return HostsStatusResponseToJSONTyped(json, false);
}

export function HostsStatusResponseToJSONTyped(value?: HostsStatusResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'targetHostsStatus': value['targetHostsStatus'] == null ? undefined : ((value['targetHostsStatus'] as Array<any>).map(TargetHostStatusToJSON)),
        'clientHostStatus': ClientHostStatusToJSON(value['clientHostStatus']),
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
    };
}

