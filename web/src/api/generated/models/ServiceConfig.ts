/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * Dashboard service for coordinating distributed CPU simulation experiments
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClientHost } from './ClientHost';
import {
    ClientHostFromJSON,
    ClientHostFromJSONTyped,
    ClientHostToJSON,
    ClientHostToJSONTyped,
} from './ClientHost';
import type { TargetHost } from './TargetHost';
import {
    TargetHostFromJSON,
    TargetHostFromJSONTyped,
    TargetHostToJSON,
    TargetHostToJSONTyped,
} from './TargetHost';

/**
 * Dashboard service configuration (only service URLs)
 * @export
 * @interface ServiceConfig
 */
export interface ServiceConfig {
    /**
     * List of target hosts to collect metrics from
     * @type {Array<TargetHost>}
     * @memberof ServiceConfig
     */
    targetHosts?: Array<TargetHost>;
    /**
     * 
     * @type {ClientHost}
     * @memberof ServiceConfig
     */
    clientHost?: ClientHost;
}

/**
 * Check if a given object implements the ServiceConfig interface.
 */
export function instanceOfServiceConfig(value: object): value is ServiceConfig {
    return true;
}

export function ServiceConfigFromJSON(json: any): ServiceConfig {
    return ServiceConfigFromJSONTyped(json, false);
}

export function ServiceConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'targetHosts': json['targetHosts'] == null ? undefined : ((json['targetHosts'] as Array<any>).map(TargetHostFromJSON)),
        'clientHost': json['clientHost'] == null ? undefined : ClientHostFromJSON(json['clientHost']),
    };
}

export function ServiceConfigToJSON(json: any): ServiceConfig {
    return ServiceConfigToJSONTyped(json, false);
}

export function ServiceConfigToJSONTyped(value?: ServiceConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'targetHosts': value['targetHosts'] == null ? undefined : ((value['targetHosts'] as Array<any>).map(TargetHostToJSON)),
        'clientHost': ClientHostToJSON(value['clientHost']),
    };
}

