/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * 管理面API，用于管理多个CPU仿真主机和全局实验
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExperimentPhases } from './ExperimentPhases';
import {
    ExperimentPhasesFromJSON,
    ExperimentPhasesFromJSONTyped,
    ExperimentPhasesToJSON,
    ExperimentPhasesToJSONTyped,
} from './ExperimentPhases';
import type { StopAndCollectResponseHostsCollectedInner } from './StopAndCollectResponseHostsCollectedInner';
import {
    StopAndCollectResponseHostsCollectedInnerFromJSON,
    StopAndCollectResponseHostsCollectedInnerFromJSONTyped,
    StopAndCollectResponseHostsCollectedInnerToJSON,
    StopAndCollectResponseHostsCollectedInnerToJSONTyped,
} from './StopAndCollectResponseHostsCollectedInner';
import type { StopAndCollectResponseHostsFailedInner } from './StopAndCollectResponseHostsFailedInner';
import {
    StopAndCollectResponseHostsFailedInnerFromJSON,
    StopAndCollectResponseHostsFailedInnerFromJSONTyped,
    StopAndCollectResponseHostsFailedInnerToJSON,
    StopAndCollectResponseHostsFailedInnerToJSONTyped,
} from './StopAndCollectResponseHostsFailedInner';

/**
 * 
 * @export
 * @interface StopAndCollectResponse
 */
export interface StopAndCollectResponse {
    /**
     * 
     * @type {string}
     * @memberof StopAndCollectResponse
     */
    experimentId: string;
    /**
     * 停止和收集的总体状态
     * @type {string}
     * @memberof StopAndCollectResponse
     */
    status: StopAndCollectResponseStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof StopAndCollectResponse
     */
    timestamp: Date;
    /**
     * 
     * @type {string}
     * @memberof StopAndCollectResponse
     */
    message?: string;
    /**
     * 
     * @type {ExperimentPhases}
     * @memberof StopAndCollectResponse
     */
    phases?: ExperimentPhases;
    /**
     * 成功收集数据的主机列表
     * @type {Array<StopAndCollectResponseHostsCollectedInner>}
     * @memberof StopAndCollectResponse
     */
    hostsCollected?: Array<StopAndCollectResponseHostsCollectedInner>;
    /**
     * 收集失败的主机列表
     * @type {Array<StopAndCollectResponseHostsFailedInner>}
     * @memberof StopAndCollectResponse
     */
    hostsFailed?: Array<StopAndCollectResponseHostsFailedInner>;
}


/**
 * @export
 */
export const StopAndCollectResponseStatusEnum = {
    Success: 'success',
    Partial: 'partial',
    Failed: 'failed'
} as const;
export type StopAndCollectResponseStatusEnum = typeof StopAndCollectResponseStatusEnum[keyof typeof StopAndCollectResponseStatusEnum];


/**
 * Check if a given object implements the StopAndCollectResponse interface.
 */
export function instanceOfStopAndCollectResponse(value: object): value is StopAndCollectResponse {
    if (!('experimentId' in value) || value['experimentId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function StopAndCollectResponseFromJSON(json: any): StopAndCollectResponse {
    return StopAndCollectResponseFromJSONTyped(json, false);
}

export function StopAndCollectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StopAndCollectResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'experimentId': json['experimentId'],
        'status': json['status'],
        'timestamp': (new Date(json['timestamp'])),
        'message': json['message'] == null ? undefined : json['message'],
        'phases': json['phases'] == null ? undefined : ExperimentPhasesFromJSON(json['phases']),
        'hostsCollected': json['hostsCollected'] == null ? undefined : ((json['hostsCollected'] as Array<any>).map(StopAndCollectResponseHostsCollectedInnerFromJSON)),
        'hostsFailed': json['hostsFailed'] == null ? undefined : ((json['hostsFailed'] as Array<any>).map(StopAndCollectResponseHostsFailedInnerFromJSON)),
    };
}

export function StopAndCollectResponseToJSON(json: any): StopAndCollectResponse {
    return StopAndCollectResponseToJSONTyped(json, false);
}

export function StopAndCollectResponseToJSONTyped(value?: StopAndCollectResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'experimentId': value['experimentId'],
        'status': value['status'],
        'timestamp': ((value['timestamp']).toISOString()),
        'message': value['message'],
        'phases': ExperimentPhasesToJSON(value['phases']),
        'hostsCollected': value['hostsCollected'] == null ? undefined : ((value['hostsCollected'] as Array<any>).map(StopAndCollectResponseHostsCollectedInnerToJSON)),
        'hostsFailed': value['hostsFailed'] == null ? undefined : ((value['hostsFailed'] as Array<any>).map(StopAndCollectResponseHostsFailedInnerToJSON)),
    };
}

