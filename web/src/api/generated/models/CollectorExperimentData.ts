/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * 管理面API，用于管理多个CPU仿真主机和全局实验
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MetricDataPoint } from './MetricDataPoint';
import {
    MetricDataPointFromJSON,
    MetricDataPointFromJSONTyped,
    MetricDataPointToJSON,
    MetricDataPointToJSONTyped,
} from './MetricDataPoint';

/**
 * 
 * @export
 * @interface CollectorExperimentData
 */
export interface CollectorExperimentData {
    /**
     * 
     * @type {string}
     * @memberof CollectorExperimentData
     */
    experimentId: string;
    /**
     * 
     * @type {string}
     * @memberof CollectorExperimentData
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof CollectorExperimentData
     */
    startTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof CollectorExperimentData
     */
    endTime?: Date;
    /**
     * Duration in seconds
     * @type {number}
     * @memberof CollectorExperimentData
     */
    duration?: number;
    /**
     * Collection interval in milliseconds
     * @type {number}
     * @memberof CollectorExperimentData
     */
    collectionInterval?: number;
    /**
     * 
     * @type {Array<MetricDataPoint>}
     * @memberof CollectorExperimentData
     */
    metrics: Array<MetricDataPoint>;
}

/**
 * Check if a given object implements the CollectorExperimentData interface.
 */
export function instanceOfCollectorExperimentData(value: object): value is CollectorExperimentData {
    if (!('experimentId' in value) || value['experimentId'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('metrics' in value) || value['metrics'] === undefined) return false;
    return true;
}

export function CollectorExperimentDataFromJSON(json: any): CollectorExperimentData {
    return CollectorExperimentDataFromJSONTyped(json, false);
}

export function CollectorExperimentDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectorExperimentData {
    if (json == null) {
        return json;
    }
    return {
        
        'experimentId': json['experimentId'],
        'description': json['description'] == null ? undefined : json['description'],
        'startTime': (new Date(json['startTime'])),
        'endTime': json['endTime'] == null ? undefined : (new Date(json['endTime'])),
        'duration': json['duration'] == null ? undefined : json['duration'],
        'collectionInterval': json['collectionInterval'] == null ? undefined : json['collectionInterval'],
        'metrics': ((json['metrics'] as Array<any>).map(MetricDataPointFromJSON)),
    };
}

export function CollectorExperimentDataToJSON(json: any): CollectorExperimentData {
    return CollectorExperimentDataToJSONTyped(json, false);
}

export function CollectorExperimentDataToJSONTyped(value?: CollectorExperimentData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'experimentId': value['experimentId'],
        'description': value['description'],
        'startTime': ((value['startTime']).toISOString()),
        'endTime': value['endTime'] == null ? undefined : ((value['endTime']).toISOString()),
        'duration': value['duration'],
        'collectionInterval': value['collectionInterval'],
        'metrics': ((value['metrics'] as Array<any>).map(MetricDataPointToJSON)),
    };
}

