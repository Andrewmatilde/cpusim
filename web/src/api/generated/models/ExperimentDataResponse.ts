/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * 管理面API，用于管理多个CPU仿真主机和全局实验
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Experiment } from './Experiment';
import {
    ExperimentFromJSON,
    ExperimentFromJSONTyped,
    ExperimentToJSON,
    ExperimentToJSONTyped,
} from './Experiment';
import type { ExperimentDataResponseTargetHostsInner } from './ExperimentDataResponseTargetHostsInner';
import {
    ExperimentDataResponseTargetHostsInnerFromJSON,
    ExperimentDataResponseTargetHostsInnerFromJSONTyped,
    ExperimentDataResponseTargetHostsInnerToJSON,
    ExperimentDataResponseTargetHostsInnerToJSONTyped,
} from './ExperimentDataResponseTargetHostsInner';
import type { ExperimentDataResponseClientHost } from './ExperimentDataResponseClientHost';
import {
    ExperimentDataResponseClientHostFromJSON,
    ExperimentDataResponseClientHostFromJSONTyped,
    ExperimentDataResponseClientHostToJSON,
    ExperimentDataResponseClientHostToJSONTyped,
} from './ExperimentDataResponseClientHost';

/**
 * 
 * @export
 * @interface ExperimentDataResponse
 */
export interface ExperimentDataResponse {
    /**
     * 
     * @type {string}
     * @memberof ExperimentDataResponse
     */
    experimentId: string;
    /**
     * 
     * @type {Experiment}
     * @memberof ExperimentDataResponse
     */
    experiment?: Experiment;
    /**
     * 目标主机实验数据
     * @type {Array<ExperimentDataResponseTargetHostsInner>}
     * @memberof ExperimentDataResponse
     */
    targetHosts?: Array<ExperimentDataResponseTargetHostsInner>;
    /**
     * 
     * @type {ExperimentDataResponseClientHost}
     * @memberof ExperimentDataResponse
     */
    clientHost?: ExperimentDataResponseClientHost;
}

/**
 * Check if a given object implements the ExperimentDataResponse interface.
 */
export function instanceOfExperimentDataResponse(value: object): value is ExperimentDataResponse {
    if (!('experimentId' in value) || value['experimentId'] === undefined) return false;
    return true;
}

export function ExperimentDataResponseFromJSON(json: any): ExperimentDataResponse {
    return ExperimentDataResponseFromJSONTyped(json, false);
}

export function ExperimentDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperimentDataResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'experimentId': json['experimentId'],
        'experiment': json['experiment'] == null ? undefined : ExperimentFromJSON(json['experiment']),
        'targetHosts': json['targetHosts'] == null ? undefined : ((json['targetHosts'] as Array<any>).map(ExperimentDataResponseTargetHostsInnerFromJSON)),
        'clientHost': json['clientHost'] == null ? undefined : ExperimentDataResponseClientHostFromJSON(json['clientHost']),
    };
}

export function ExperimentDataResponseToJSON(json: any): ExperimentDataResponse {
    return ExperimentDataResponseToJSONTyped(json, false);
}

export function ExperimentDataResponseToJSONTyped(value?: ExperimentDataResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'experimentId': value['experimentId'],
        'experiment': ExperimentToJSON(value['experiment']),
        'targetHosts': value['targetHosts'] == null ? undefined : ((value['targetHosts'] as Array<any>).map(ExperimentDataResponseTargetHostsInnerToJSON)),
        'clientHost': ExperimentDataResponseClientHostToJSON(value['clientHost']),
    };
}

