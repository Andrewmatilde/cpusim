/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * 管理面API，用于管理多个CPU仿真主机和全局实验
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RequestConfig } from './RequestConfig';
import {
    RequestConfigFromJSON,
    RequestConfigFromJSONTyped,
    RequestConfigToJSON,
    RequestConfigToJSONTyped,
} from './RequestConfig';
import type { HostConfig } from './HostConfig';
import {
    HostConfigFromJSON,
    HostConfigFromJSONTyped,
    HostConfigToJSON,
    HostConfigToJSONTyped,
} from './HostConfig';

/**
 * 
 * @export
 * @interface CreateExperimentRequest
 */
export interface CreateExperimentRequest {
    /**
     * 实验唯一标识
     * @type {string}
     * @memberof CreateExperimentRequest
     */
    experimentId: string;
    /**
     * 实验描述
     * @type {string}
     * @memberof CreateExperimentRequest
     */
    description?: string;
    /**
     * 超时时间(秒)
     * @type {number}
     * @memberof CreateExperimentRequest
     */
    timeout?: number;
    /**
     * 数据收集间隔(毫秒)
     * @type {number}
     * @memberof CreateExperimentRequest
     */
    collectionInterval?: number;
    /**
     * 目标主机列表（运行cpusim-server和collector-server）
     * @type {Array<HostConfig>}
     * @memberof CreateExperimentRequest
     */
    targetHosts: Array<HostConfig>;
    /**
     * 
     * @type {HostConfig}
     * @memberof CreateExperimentRequest
     */
    clientHost: HostConfig;
    /**
     * 
     * @type {RequestConfig}
     * @memberof CreateExperimentRequest
     */
    requestConfig: RequestConfig;
}

/**
 * Check if a given object implements the CreateExperimentRequest interface.
 */
export function instanceOfCreateExperimentRequest(value: object): value is CreateExperimentRequest {
    if (!('experimentId' in value) || value['experimentId'] === undefined) return false;
    if (!('targetHosts' in value) || value['targetHosts'] === undefined) return false;
    if (!('clientHost' in value) || value['clientHost'] === undefined) return false;
    if (!('requestConfig' in value) || value['requestConfig'] === undefined) return false;
    return true;
}

export function CreateExperimentRequestFromJSON(json: any): CreateExperimentRequest {
    return CreateExperimentRequestFromJSONTyped(json, false);
}

export function CreateExperimentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateExperimentRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'experimentId': json['experimentId'],
        'description': json['description'] == null ? undefined : json['description'],
        'timeout': json['timeout'] == null ? undefined : json['timeout'],
        'collectionInterval': json['collectionInterval'] == null ? undefined : json['collectionInterval'],
        'targetHosts': ((json['targetHosts'] as Array<any>).map(HostConfigFromJSON)),
        'clientHost': HostConfigFromJSON(json['clientHost']),
        'requestConfig': RequestConfigFromJSON(json['requestConfig']),
    };
}

export function CreateExperimentRequestToJSON(json: any): CreateExperimentRequest {
    return CreateExperimentRequestToJSONTyped(json, false);
}

export function CreateExperimentRequestToJSONTyped(value?: CreateExperimentRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'experimentId': value['experimentId'],
        'description': value['description'],
        'timeout': value['timeout'],
        'collectionInterval': value['collectionInterval'],
        'targetHosts': ((value['targetHosts'] as Array<any>).map(HostConfigToJSON)),
        'clientHost': HostConfigToJSON(value['clientHost']),
        'requestConfig': RequestConfigToJSON(value['requestConfig']),
    };
}

