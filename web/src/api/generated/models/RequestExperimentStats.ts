/* tslint:disable */
/* eslint-disable */
/**
 * CPU Simulation Dashboard API
 * 管理面API，用于管理多个CPU仿真主机和全局实验
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RequestExperimentStats
 */
export interface RequestExperimentStats {
    /**
     * 实验ID
     * @type {string}
     * @memberof RequestExperimentStats
     */
    experimentId?: string;
    /**
     * 实验状态
     * @type {string}
     * @memberof RequestExperimentStats
     */
    status?: RequestExperimentStatsStatusEnum;
    /**
     * 总请求数
     * @type {number}
     * @memberof RequestExperimentStats
     */
    totalRequests?: number;
    /**
     * 成功请求数
     * @type {number}
     * @memberof RequestExperimentStats
     */
    successfulRequests?: number;
    /**
     * 失败请求数
     * @type {number}
     * @memberof RequestExperimentStats
     */
    failedRequests?: number;
    /**
     * 平均响应时间（毫秒）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    averageResponseTime?: number;
    /**
     * 最小响应时间（毫秒）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    minResponseTime?: number;
    /**
     * 最大响应时间（毫秒）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    maxResponseTime?: number;
    /**
     * 每秒请求数（QPS）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    requestsPerSecond?: number;
    /**
     * 错误率（百分比）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    errorRate?: number;
    /**
     * 50%分位响应时间（毫秒）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    responseTimeP50?: number;
    /**
     * 95%分位响应时间（毫秒）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    responseTimeP95?: number;
    /**
     * 99%分位响应时间（毫秒）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    responseTimeP99?: number;
    /**
     * 开始时间
     * @type {Date}
     * @memberof RequestExperimentStats
     */
    startTime?: Date;
    /**
     * 结束时间
     * @type {Date}
     * @memberof RequestExperimentStats
     */
    endTime?: Date | null;
    /**
     * 持续时间（秒）
     * @type {number}
     * @memberof RequestExperimentStats
     */
    duration?: number;
    /**
     * 最后更新时间
     * @type {Date}
     * @memberof RequestExperimentStats
     */
    lastUpdated?: Date;
}


/**
 * @export
 */
export const RequestExperimentStatsStatusEnum = {
    Running: 'running',
    Stopped: 'stopped',
    Completed: 'completed',
    Error: 'error'
} as const;
export type RequestExperimentStatsStatusEnum = typeof RequestExperimentStatsStatusEnum[keyof typeof RequestExperimentStatsStatusEnum];


/**
 * Check if a given object implements the RequestExperimentStats interface.
 */
export function instanceOfRequestExperimentStats(value: object): value is RequestExperimentStats {
    return true;
}

export function RequestExperimentStatsFromJSON(json: any): RequestExperimentStats {
    return RequestExperimentStatsFromJSONTyped(json, false);
}

export function RequestExperimentStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestExperimentStats {
    if (json == null) {
        return json;
    }
    return {
        
        'experimentId': json['experimentId'] == null ? undefined : json['experimentId'],
        'status': json['status'] == null ? undefined : json['status'],
        'totalRequests': json['totalRequests'] == null ? undefined : json['totalRequests'],
        'successfulRequests': json['successfulRequests'] == null ? undefined : json['successfulRequests'],
        'failedRequests': json['failedRequests'] == null ? undefined : json['failedRequests'],
        'averageResponseTime': json['averageResponseTime'] == null ? undefined : json['averageResponseTime'],
        'minResponseTime': json['minResponseTime'] == null ? undefined : json['minResponseTime'],
        'maxResponseTime': json['maxResponseTime'] == null ? undefined : json['maxResponseTime'],
        'requestsPerSecond': json['requestsPerSecond'] == null ? undefined : json['requestsPerSecond'],
        'errorRate': json['errorRate'] == null ? undefined : json['errorRate'],
        'responseTimeP50': json['responseTimeP50'] == null ? undefined : json['responseTimeP50'],
        'responseTimeP95': json['responseTimeP95'] == null ? undefined : json['responseTimeP95'],
        'responseTimeP99': json['responseTimeP99'] == null ? undefined : json['responseTimeP99'],
        'startTime': json['startTime'] == null ? undefined : (new Date(json['startTime'])),
        'endTime': json['endTime'] == null ? undefined : (new Date(json['endTime'])),
        'duration': json['duration'] == null ? undefined : json['duration'],
        'lastUpdated': json['lastUpdated'] == null ? undefined : (new Date(json['lastUpdated'])),
    };
}

export function RequestExperimentStatsToJSON(json: any): RequestExperimentStats {
    return RequestExperimentStatsToJSONTyped(json, false);
}

export function RequestExperimentStatsToJSONTyped(value?: RequestExperimentStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'experimentId': value['experimentId'],
        'status': value['status'],
        'totalRequests': value['totalRequests'],
        'successfulRequests': value['successfulRequests'],
        'failedRequests': value['failedRequests'],
        'averageResponseTime': value['averageResponseTime'],
        'minResponseTime': value['minResponseTime'],
        'maxResponseTime': value['maxResponseTime'],
        'requestsPerSecond': value['requestsPerSecond'],
        'errorRate': value['errorRate'],
        'responseTimeP50': value['responseTimeP50'],
        'responseTimeP95': value['responseTimeP95'],
        'responseTimeP99': value['responseTimeP99'],
        'startTime': value['startTime'] == null ? undefined : ((value['startTime']).toISOString()),
        'endTime': value['endTime'] === null ? null : ((value['endTime'] as any)?.toISOString()),
        'duration': value['duration'],
        'lastUpdated': value['lastUpdated'] == null ? undefined : ((value['lastUpdated']).toISOString()),
    };
}

