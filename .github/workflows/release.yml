name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'  # Using 1.22 as 1.25 is not yet released

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -v -ldflags="-s -w" -o cpusim-server-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }} ./cmd/cpusim-server

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cpusim-server-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }}
          path: cpusim-server-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SIM_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            ## CPU仿真服务 - GCD计算器

            ### 下载说明
            - `cpusim-server-${{ github.ref_name }}-linux-amd64`: Linux x86_64
            - `cpusim-server-${{ github.ref_name }}-linux-arm64`: Linux ARM64
            - `cpusim-server-${{ github.ref_name }}-darwin-amd64`: macOS Intel
            - `cpusim-server-${{ github.ref_name }}-darwin-arm64`: macOS Apple Silicon

            ### 使用方法
            ```bash
            # Linux/macOS
            chmod +x cpusim-server-${{ github.ref_name }}-*
            sudo ./cpusim-server-${{ github.ref_name }}-*
            ```

      - name: Upload Release Assets
        run: |
          for file in ./artifacts/*/*; do
            name=$(basename "$file")
            echo "Uploading $name"
            gh release upload "${{ github.ref_name }}" "$file" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.SIM_TOKEN }}