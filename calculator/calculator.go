package calculator

import (
	"math/big"
)

type Calculator struct {
	// 预定义的大整数，用于固定计算负载
	fixedA *big.Int
	fixedB *big.Int
}

func New() *Calculator {
	// 使用两个大的斐波那契数作为固定值（约1200位）
	// 这些数字足够大，可以产生稳定的计算负载
	aStr := "288006719437081612064461045582996248318550191762069222439730410477812745867621795364311733487869513185942983695215476169383038903552804435414094508834202466589196823871807977202629637704020007230465262130782791032317015620246305172639458422481088108673357991616220899406861219438147392905162253408001430063845979389727462365854374356728987645678976543213456789087654321123456789087654323456789087654323456789087654323456789087654323456789087654323456789087654323456789098765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543"
	bStr := "177997941600471418946732056639426180444608155543879635266733371758935892661156742406886684150292390815978219096362476722318836336535163521669916203376029293201875906689536935790127946702623414158718880281706210784320499487923219672450403132661529622254520525083630232403761214899614838044055207314007924009787654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543212345678908765432123456789087654321234567890876543"

	c := &Calculator{
		fixedA: new(big.Int),
		fixedB: new(big.Int),
	}

	c.fixedA.SetString(aStr, 10)
	c.fixedB.SetString(bStr, 10)

	return c
}

// GCD 计算预定义大整数的最大公约数
// 为了增加计算开销，计算 5 次以屏蔽网络波动的影响
func (c *Calculator) GCD() *big.Int {
	var result *big.Int

	// 计算 5 次，增加 5 倍计算开销
	for i := 0; i < 5; i++ {
		// 使用固定的大整数进行计算
		x := new(big.Int).Set(c.fixedA)
		y := new(big.Int).Set(c.fixedB)

		for y.Sign() != 0 {
			temp := new(big.Int)
			temp.Mod(x, y)
			x = y
			y = temp
		}

		result = x
	}

	return result
}

// GetFixedNumbers 返回当前使用的固定大整数
func (c *Calculator) GetFixedNumbers() (a, b *big.Int) {
	return c.fixedA, c.fixedB
}
